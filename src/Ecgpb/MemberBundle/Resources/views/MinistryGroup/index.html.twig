{% extends '::base.html.twig' %}


{% block body_start %}<body ng-app="app" ng-controller="ListingController">{% endblock %}


{% block body %}
    <div class="btn-group pull-right">
        <button type="button" class="btn btn-default" ng-click="newGroup()" title="{% trans %}Add Ministry Group{% endtrans %}">
            <span class="glyphicon glyphicon-plus"></span>
        </button>
        <button type="button" class="btn btn-default" ng-click="save()" title="{% trans %}Save Changes{% endtrans %}">
            <span class="glyphicon glyphicon-floppy-disk"></span>
        </button>
    </div>

    <h2>{% trans %}Ministry Groups{% endtrans %}</h2>

    <div class="alert alert-danger ng-hide" ng-show="error">
        {{ '{{ error }}' }}
    </div>

    <table class="table table-bordered">
        <tr>
            <th class="col-md-5">{% trans %}Name{% endtrans %}</th>
            <th class="col-md-6">{% trans %}Persons{% endtrans %}</th>
            <th class="col-md-1 text-center">{% trans %}Actions{% endtrans %}</th>
        </tr>
        <tr ng-repeat="ministryGroup in ministryGroups">
            <td>
                <input type="text" ng-model="ministryGroup.name" class="form-control input-sm" ng-show="isEditable(ministryGroup)" />
                <span ng-show="!isEditable(ministryGroup)">{{ '{{ ministryGroup.name }}' }}</span>
            </td>
            <td>
                <div ng-repeat="(index, person) in ministryGroup.persons" class="row">
                    <div class="col-md-10" ng-show="isEditable(ministryGroup)">
                        <select class="form-control input-sm"
                         ng-model="ministryGroup.persons[index]"
                         ng-options="p as getPersonsLabel(p) for p in persons track by p.id">
                            <option value="">- {% trans %}Person{% endtrans %} -</option>
                        </select>
                    </div>
                    <div class="col-md-2" ng-show="isEditable(ministryGroup)">
                        <button type="button" class="btn btn-default btn-sm pull-right" ng-click="ministryGroup.removePerson(person)" ng-show="isEditable(ministryGroup)">
                            <span class="glyphicon glyphicon-minus"></span>
                        </button>
                    </div>
                    <div class="col-md-12" ng-show="!isEditable(ministryGroup)">
                        <strong>
                            {{ '{{ getPersonsLabel(person) }}' }}
                        </strong>
                    </div>
                </div>
                <button type="button" class="btn btn-default btn-sm pull-right" ng-click="ministryGroup.addPerson({})" ng-show="isEditable(ministryGroup)">
                    <span class="glyphicon glyphicon-plus"></span>
                </button>
            </td>
            <td class="text-center">
                <button type="button" class="btn btn-default btn-sm" ng-click="setEditable(ministryGroup)" ng-show="!isEditable(ministryGroup)">
                    <span class="glyphicon glyphicon-pencil"></span>
                </button>
                <button type="button" class="btn btn-default btn-sm" ng-click="cancelEditing()" ng-show="isEditable(ministryGroup)">
                    <span class="glyphicon glyphicon-ban-circle"></span>
                </button>
                <button type="button" class="btn btn-default btn-sm"
                 nait-confirm-click
                 confirm="{% trans %}Do you really want to remove this record?{% endtrans %}"
                 confirm-if=""
                 confirm-button-text="{% trans %}Yes{% endtrans %}"
                 cancel-button-text="{% trans %}No{% endtrans %}"
                 do="removeGroup(ministryGroup)">
                    <span class="glyphicon glyphicon-remove"></span>
                </button>
            </td>
        </tr>
        <tr ng-show="ministryGroups.length == 0">
            <td colspan="7">
                {% trans %}There are no entries existing, yet.{% endtrans %}
            </td>
        </tr>
    </table>
{% endblock %}


{% block javascripts %}
    {{ parent() }}

    <script type="text/javascript">
        // <![CDATA[
        angular.module('app', ['ui.bootstrap', 'naitsirch.helpers'])
            .constant('ministryGroups', {{ groups_json | raw }})
            .constant('persons', {{ persons_json | raw }})
            .constant('updateUrl', '{{ path('ecgpb.member.ministry_group.update') }}')
            .controller('ListingController', function(
                $scope, $http, $uibModal,
                MinistryGroup, ministryGroups, persons,
                updateUrl
            ) {
                $scope.ministryGroups = ministryGroups.map(function(data) {
                    return new MinistryGroup(data.id, data.name, data.persons);
                });
                $scope.persons = persons;
                $scope.error = null;
                $scope.editableGroup = null;
                $scope.backupGroup = null;

                $scope.newGroup = function() {
                    var group = new MinistryGroup();
                    group.addPerson(persons[0]);
                    $scope.ministryGroups.push(group);
                    $scope.setEditable(group);
                };

                $scope.removeGroup = function(group) {
                    var index = $scope.ministryGroups.indexOf(group);
                    $scope.ministryGroups.splice(index, 1);
                };

                $scope.setEditable = function(ministryGroup) {
                    $scope.editableGroup = ministryGroup;
                    $scope.backupGroup = angular.copy(ministryGroup);
                };

                $scope.isEditable = function(ministryGroup) {
                    return $scope.editableGroup === ministryGroup;
                };

                $scope.cancelEditing = function() {
                    var index = $scope.ministryGroups.indexOf($scope.editableGroup);
                    $scope.editableGroup = null;
                    $scope.ministryGroups[index] = $scope.backupGroup;
                };

                $scope.getPersonsLabel = function(person) {
                    if (!person || !person.address) {
                        return '';
                    }
                    return person.address.familyName + ', ' + person.firstname + ' (' + new Date(person.dob).getFullYear() + ')';
                };

                $scope.save = function() {
                    $scope.editableGroup = null;
                    var savingModal = $uibModal.open({templateUrl: 'saving-modal.html'});

                    $http.post(updateUrl, $scope.ministryGroups)
                        .success(function(data, status, headers, config) {
                            $scope.error = null;
                            savingModal.close('success');
                        })
                        .error(function(data, status, headers, config) {
                            $scope.error = data;
                            savingModal.dismiss('error');
                        })
                    ;
                };
            })
            .factory('MinistryGroup', function() {
                var MinistryGroup = function(id, name, persons) {
                    this.id = id;
                    this.name = name;
                    this.persons = persons ? persons : [];
                    this.addPerson = function(person) {
                        this.persons.push(person);
                    };
                    this.removePerson = function(person) {
                        var index = this.persons.indexOf(person);
                        this.persons.splice(index, 1);
                    }
                };
                return MinistryGroup;
            })
        ;
        // ]]>
    </script>

    <script type="text/ng-template" id="saving-modal.html">
        <div class="modal-body">
            <p>{% trans %}Saving{% endtrans %}...</p>
        </div>
    </script>
{% endblock %}